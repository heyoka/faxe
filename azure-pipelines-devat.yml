# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool: devat-faxe-cluster

steps:
- task: CopyFiles@2
  inputs:
    Contents: |
      **/*
      !todo
      !statefulset.yml
      !README.md
      !docker.run
      !Dockerfile_azedge
      !azure-pipelines.yml
      !azure-pipelines-devat.yml
      !azure-pipelines-azure.yml
      !azure-pipelines-helix.yml
      !docker-compose.yaml
      !Dockerfile_debian.intel-nuc
      !Dockerfile.intel-nuc
      !Dockerfile.k8s
      !Dockerfile_faxe
      !Dockerfile.revpi-core-3
      !docker-compose-azure.yml
      !docker-compose-helix.yml
    TargetFolder: '/opt/faxe/faxe_repo'
    CleanTargetFolder: true
    overWrite: true
- script: | 
    cd /opt/faxe/faxe_repo
    echo '$(Build.Repository.Name).$(Build.BuildNumber)'
    TAG=$(echo '$(Build.Repository.Name):$(Build.BuildNumber)')
    sudo -u faxe docker build -t $(Build.Repository.Name):$(Build.BuildNumber) -f Dockerfile_debian .
    sed "s!Dockerfile_debian!$TAG!g" -i docker-compose-devat.yml
    # change port binding dynamically to host, used for loadbalancing to prevent duplicate port binding
    sed "sL8080:8080L$(hostname -i):8080:8080Lg" -i docker-compose-devat.yml
    
    # stop old version
    sudo -u faxe docker-compose -f docker-compose-devat.yml down
    
    # kill/remove old data
    if [[ $(sudo -u faxe docker ps -a | grep faxe ) ]]; 
      then
        sudo -u faxe docker kill faxe; 
        sudo -u faxe docker container rm faxe;
        #sudo -u faxe docker rmi faxe_repo_faxe;
        echo "running faxe found - kill+remove it"
      else
        echo "no running faxe found - skip"
    fi
    
    sudo -u faxe docker-compose -f docker-compose-devat.yml  up -d
  displayName: 'start container via docker-compose'
  
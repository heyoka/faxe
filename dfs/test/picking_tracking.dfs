def win_size = 10s
def raw_map = <<<{"S:FpFrontal1-SS:1-LP:1-PC:1":"topic/1/new",
                        "S:FpFrontal1-SS:1-LP:1-PC:2":"topic/2/new",
                            "S:FpFrontal1-SS:1-LP:1-PC:3":"topic/3/new"}>>>

|mem()
.key('stream_raw_lookup')
.default(raw_map)
.default_json()


|json_emitter()
.every(200ms)
.json(
<<<
{
"Workstation" : "S:FpFrontal1-SS:1-LP:1-PC:1",
"Operator" : "Sim",
"OrderName" : "Order_1000419",
"Action" : "Pick",
"Quantity" : 1,
"OrderLineName" : "OrderLine_1",
"SourceSectionName" : "full",
"Sku" : "6013300",
"SourceLoadCarrierName" : "68832"
}
>>>,
<<<
{
"Workstation" : "S:FpFrontal1-SS:1-LP:1-PC:2",
"Operator" : "Sim",
"OrderName" : "Order_1000419",
"Action" : "Pick",
"Quantity" : 1,
"OrderLineName" : "OrderLine_1",
"SourceSectionName" : "full",
"Sku" : "3013294",
"SourceLoadCarrierName" : "68832"
}
>>>,
<<<
{
"Workstation" : "S:FpFrontal1-SS:1-LP:1-PC:3",
"Operator" : "Sim",
"OrderName" : "Order_1000419",
"Action" : "Pick",
"Quantity" : 1,
"OrderLineName" : "OrderLine_1",
"SourceSectionName" : "full",
"Sku" : "6013294",
"SourceLoadCarrierName" : "68831"
}
>>> )
.as('data')

%|debug('info')

|group_by('data.Workstation')

|eval(
    %% rewrite/split streams
    lambda: map_get("data.Workstation", ls_mem('stream_raw_lookup')),
    %% build some names
    lambda: str_concat("data.OrderName", "data.OrderLineName"),
    lambda: str_concat("data.SourceLoadCarrierName", "data.Sku")
    )
    .as(
    'topic',
    'UniqueOrderLineName',
    'SourceLoadCarrierSku'
    )

|win_time()
.every(win_size)

|aggregate()
.fields(
% ######### load carrier count
    'SourceLoadCarrierName',
% ######### order count
    'data.OrderName',
% ######### sku count all
    'data.Sku',
% ######### inventory line count
    'UniqueOrderLineName',
% ######### quantity
    'data.Quantity'
)
.functions(
% ######### load carrier count
    'count_change',
% ######### order count
    'count_distinct',
% ######### sku count all
    'count',
% ######### inventory line count
    'count_distinct',
% ######### quantity
    'sum'
)
.as(
% ######### load carrier count
    'data.SourceLoadCarrierCount',
% ######### order count
    'data.OrderCount',
% ######### sku count all
    'data.PickInstructionCount',
% ######### inventory line count
    'data.InventoryLineCount',
% ######### quantity
    'data.TotalQuantity'

)
.keep('data.Workstation', 'topic')

% #### keep raw data, but splitted by "Workstation"
|group_union()

|debug()
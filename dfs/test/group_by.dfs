def group_field = 'data.code'
def data =
 |json_emitter()
 .every(100ms)
 .align(true)
 .json(
     <<<{"code" : 224, "message": "this is a test", "mode": 1}>>>,
     <<<{"code" : 334, "message": "this is another test", "mode": 1}>>>,
     <<<{"code" : 114, "message": "this is another test", "mode": 2}>>>,
     <<<{"code" : 443, "message": "this is another test", "mode": 1}>>>,
     <<<{"code" : 224, "message": "this is another test", "mode": 2}>>>,
     <<<{"code" : 111, "message": "this is another test", "mode": 1}>>>,
     <<<{"code" : 551, "message": "this is another test", "mode": 2}>>>
 )
 .as('data')

%% %% %% %% %% %% group
def group_by =
data
|group_by(group_field)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% |> start groups

def window =
group_by
|eval(
    lambda: string("data.code"),
    lambda: str_replace("data.message", 'test', string("data.code"))
    )
    .as(
    'data.group',
    'data.message'
    )
|value_diff()
.fields('data.mode')
.as('data.mode_diff')
.mode('p-c')
|win_clock()
.every(4s)
.align()

def agg1 =
window
|aggregate()
.fields('data.code')
.functions('sum')
.as('data.code_sum')
%.keep('data.group')

def agg2 =
window
|aggregate()
.fields('data.mode')
.functions('count_change')
.as('data.mode_change')
%.keep('data')

agg1
|join(agg2)
.merge_field('data')
.tolerance(0s)
.missing_timeout(5ms)
.fill(0.00000)

|group_union()

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% |> end groups

|debug('notice')
%% send alarm, if the the mean exceeds a certain threshold

def mqtt_broker = '10.14.204.3'
def alarm_topic = 'ttopic/alarm/energy_max'

def point =
|json_emitter()
.every(1s)
.json(<<< {"condition": {"id": 0, "name": "OK"}, "condition_reason": "", "predicted_maintenance_time": 1584246411783,
        "vac_on_without_contact": [1.2, 2.5, 4.33], "vac_on_with_contact": [5.6, 45.98, 7.012]} >>>,
      <<< {"condition": {"id": 1, "name": "Warning"}, "condition_reason": "bad succer", "predicted_maintenance_time": 1583246411783,
         "vac_on_without_contact": [0.2, 2.5, 8.01], "vac_on_with_contact": [6.001, 4.798, 7.012]} >>>,
      <<< {"condition": {"id": 2, "name": "Error"}, "condition_reason": "something went really wrong!", "predicted_maintenance_time": 1582246411783,
         "vac_on_without_contact": [0.5, 2.5, 0.44], "vac_on_with_contact": [2.06, 4.98, 2.901]} >>>)


    |debug()

point
    |win_event()
    .every(10)

    |avg()
    .field('val')
    .as('avg')

    |debug()
    .ls_mem('avg10')
    .ls_mem_field('avg')

point
    |where()
    .lambda(lambda: "val" > ls_mem('avg10'))

    |default()
    .fields('message')
    .field_values('val is > avg10')

    |debug()
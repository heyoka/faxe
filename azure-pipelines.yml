# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - '*'

variables:
  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    environmentLetter: d
  ${{ if eq(variables['Build.SourceBranchName'], 'pre-prod') }}:
    environmentLetter: q
  ${{ if eq(variables['Build.SourceBranchName'], 'production') }}:
    environmentLetter: p
  ${{ if eq(variables['Build.SourceBranchName'], 'pipeline') }}:
    environmentLetter: q

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Setup
  condition: ne(variables['environmentLetter'], '')
  jobs:
  - job:
    steps:
    - checkout: self
    - task: Docker@2
      inputs:
        containerRegistry: 'openshift-registry'
        repository: 'connected-warehouse-$(environmentLetter)/faxe'
        command: 'buildAndPush'
        Dockerfile: '$(Agent.BuildDirectory)/s/Dockerfile.k8s'
        tags: |
          $(Build.BuildId)
          $(Build.SourceBranchName)
    - task: oc-setup@2
      inputs:
        connectionType: 'OpenShift Connection Service'
        openshiftService: 'openshift-cluster-sc'
    - task: Bash@3
      inputs:
        targetType: inline
        script: |
          sed -i 's/namespace/connected-warehouse-$(environmentLetter)/g' $(Agent.BuildDirectory)/s/statefulset.yml
          oc apply -n connected-warehouse-$(environmentLetter) -f $(Agent.BuildDirectory)/s/statefulset.yml

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          oc patch -n connected-warehouse-$(environmentLetter) statefulset/faxe-cluster --patch "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"last-restart\":\"`date +'%s'`\"}}}}}"
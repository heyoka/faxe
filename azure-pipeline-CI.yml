trigger:
- none

variables:
  trivyVersion: '0.9.1'
  dockerRegistryServiceConnection: 'nexus-docker-connection'
  imageRepository: 'docker'
  containerRegistry: 'docker.datahub.tgw-group.cloud:443'
  imageName: 'cwa/faxe'
  TAG: '$(Build.BuildNumber)'
#- group: 'faxe_dev - Devcloud - secret' # variable group
  group: 'nexux_connection - ALL - secret' # variable group for keyvault (user/pw/api keys,...)

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job:
    steps:
    - checkout: self
#    - task: Docker@2
#      inputs:
#        containerRegistry: 'nexus-docker-connection'
#        command: 'login'
#      displayName: registry log in 
    - task: Docker@2
      displayName: build container image
      inputs:
        repository: $(imageName)
        command: 'build'
        Dockerfile: 'Dockerfile_debian'
        tags: |
          latest
          $(Build.BuildNumber)
    - task: CmdLine@2
      displayName: 'build container image'
      inputs:
        script: |
          echo skip trivy checks
          #docker run --rm -v /var/run/docker.sock:/var/run/docker.sock  aquasec/trivy --exit-code 0 --ignore-unfixed --severity MEDIUM,HIGH $(imageName):$TAG
          #docker run --rm -v /var/run/docker.sock:/var/run/docker.sock  aquasec/trivy --exit-code 1 --ignore-unfixed --severity CRITICAL $(imageName):$TAG
    - task: Docker@2
      #displayName: 'Security Scan'
      inputs:
        containerRegistry: 'harbor-docker-connection'
        repository: 'cwa/faxe'
        command: 'push'
        tags: |
          $(Build.BuildNumber)
          $(Build.SourceBranch)-$(Build.BuildNumber)

#    - task: Docker@2
#      inputs:
#        containerRegistry: 'nexus-docker-connection'
#        command: 'login'
      #displayName: docker login
#    - script: |
#        echo ---------------------
#        docker images
#        wget https://github.com/aquasecurity/trivy/releases/download/v$(trivyVersion)/trivy_$(trivyVersion)_Linux-64bit.deb
#        sudo dpkg -i trivy_$(trivyVersion)_Linux-64bit.deb
#        BUILD=$(docker images  |grep faxe -m1 | awk '{print $3}')
#        export TRIVY_USERNAME=$(P-NEXUS-USER)
#        export TRIVY_PASSWORD=$(P-NEXUS-PASS)
#        #trivy --debug -severity HIGH,CRITICAL faxe:20210409.3
#        #trivy --debug -severity HIGH,CRITICAL faxe:$(Build.BuildNumber)
#        
#        trivy image -severity HIGH,CRITICAL $BUILD
#        echo --------------
#        #echo $(pwd)
#        #trivy filesystem  -severity HIGH,CRITICAL /home/vsts/work/1/s
#        echo --------------
#        #trivy repository -severity HIGH,CRITICAL docker.datahub.tgw-group.cloud:443/faxe:20210409.3
#        #echo ---------------------
#      displayName: install trivy on build server
#    - script: |
#        export TRIVY_USERNAME=$(P-NEXUS-USER)
#        export TRIVY_PASSWORD=$(P-NEXUS-PASS)
#        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock  aquasec/trivy:0.16.0 --debug --severity HIGH,CRITICAL docker.datahub.tgw-group.cloud:443/faxe:20210409.3
#      displayName: use trivy via docker
    #- task: Docker@2
    #  inputs:
    #    containerRegistry: 'nexus-docker-connection'
    #    repository: 'faxe'
    #    command: 'push'
    #    tags: '$(Build.BuildNumber)'
#  - job:
#    steps:
#    - checkout: self
#    - script: | 
#        echo '$(Build.Repository.Name).$(Build.BuildNumber)'
#        echo $(FAXE-CRATE-HTTP-PASS-KeyVault-Test)
#    - task: Docker@2
#      inputs:
#        containerRegistry: 'nexus-docker-connection'
#        repository: 'faxe'
#        command: 'buildAndPush'
#        Dockerfile: 'Dockerfile_debian'
#        tags: |
#           $(Build.BuildNumber)
#    - script: |
#        sudo apt-get install rpm
#        wget https://github.com/aquasecurity/trivy/releases/download/v$(trivyVersion)/trivy_$(trivyVersion)_Linux-64bit.deb
#        sudo dpkg -i trivy_$(trivyVersion)_Linux-64bit.deb
#        trivy -v
#  displayName: 'Download and install Trivy'

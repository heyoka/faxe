def charge = 'a7fwewh7734-1E'
def avg = 33.565
def threshold = 30

def s =
    |value_emitter()
    .every(5s)
    .type(point)

def t =
    |value_emitter()
    .every(10s)
    .type(point)

s
    |combine(t)
    .fields('val')
    .prefix('combined')
    |default()
    .tag('charge')
    .tag_value(charge)
    .field('avg')
    .field_value(avg)
    |shift(-6h)
    |delete()
    .fields('val', 'gal')

    %% add a new field named 'val.combined' with the
    %% value which is the higher one of the two fields
    %% 'combined.val' | 'avg'
    |eval(lambda: max("combined.val", "avg"))
    .as('val.combined')

    |eval(lambda: str_reverse(charge))
    .as('charge_reversed')

    %% add a new tag named "second" to the datapoint
    %% the value of the field will be 'true' if the second portion of
    %% the timestamp is greater than a ceatain value
    %% otherwise value for tag "second" will be 'false'
    |eval(lambda: if((second("ts") > threshold), 'true', 'false'))
    .as('second')
    .tags('second')

    %% set a new tag with name 'second_on_five' to 'true', if
    %% the last digit of the second portion of the timestamp
    %% equals '5',
    %% otherwise 'second_on_five' will be set to 'false'
    |eval(
        lambda: string(str_ends_with(string("ts"), '5')),
        lambda: to_date_string("ts")
        )
    .as('second_string_endwith_5', 'intermediate.hour')
    .tags('second_on_five')
    |avg()
    .field('val.combined')
    .as('val.combined.avg')


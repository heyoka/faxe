### Build stage 0
FROM erlang:22.3.4.12 as erlang

# Set working directory
RUN mkdir -p /buildroot/rebar3/bin
WORKDIR /buildroot

# Copy faxe application
COPY ./ faxe

WORKDIR faxe

# need git and build release
RUN apt-get update && apt-get install git \
    && rebar3 as prod release

### Build stage 1
FROM erlang

# Install python + some libs
### python requirements
COPY python_requirements_prod.txt ./
RUN apt-get update && apt-get install -y --no-install-recommends gcc g++ make openssl \
    && pip install --no-cache-dir -r python_requirements_prod.txt \
    && apt-get purge -y --auto-remove gcc g++ make \
    && rm -rf /var/lib/apt/lists/*

ENV RELX_REPLACE_OS_VARS true

# Install the released application
COPY --from=erlang /buildroot/faxe/_build/prod/rel/faxe /faxe
# cleanup
RUN rm -rf /buildroot

#RUN chown -R 1001:0 /faxe && \
#	chmod -R g=u /faxe

#USER 1001

# Expose relevant ports
## http api
EXPOSE 8081

ENTRYPOINT ["/faxe/bin/faxe"]
CMD ["foreground"]